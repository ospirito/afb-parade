<?php

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class AFBP_EventSchemaSettings {
	private $afbp_event_schema_options;
	public $is_em_installed;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'event_schema_options_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'event_schema_options_page_init' ) );
		add_action('admin_enqueue_scripts', array($this, 'enqueue_style'));
	}

	public function enqueue_style(){
		wp_enqueue_style('afbp-admin',plugin_dir_url( "./afb-parade/build/admin" )."admin/style.css");
	}

	public function event_schema_options_add_plugin_page() {
		add_submenu_page('afbp',
			'Event Schema Options', // page_title
			'Event Schema', // menu_title
			'manage_options', // capability
			'afbp-event-schema-options', // menu_slug
			array( $this, 'event_schema_options_create_admin_page' ), // function
			20 // position
		);
	}

	public function event_schema_options_create_admin_page() {
		$this->afbp_event_schema_options = get_option( 'afbp_event_schema_option_name' ); ?>

		<div class="wrap">
			<h2>Event Schema Options</h2>
			<p>Add event schema for Google searches on event pages</p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'event_schema_option_group' );
					do_settings_sections( 'afbp-event-schema-options-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function event_schema_options_page_init() {
		$this->is_em_installed = is_plugin_active('events-manager/events-manager.php');

		register_setting(
			'event_schema_option_group', // option_group
			'afbp_event_schema_option_name', // option_name
			array(
            'sanitize_callback' => array($this, 'event_schema_options_sanitize'), 
            'default' => Array(
                'organizer_name' => get_bloginfo("name"),
                'organizer_url' => get_bloginfo("url"),
            ))
		);

        //MARK: Settings sections
		add_settings_section(
			'afbp_event_organizer_info', // id
			'Configuration', // title
			array( $this, 'event_schema_options_section_organizer' ), // callback
			'afbp-event-schema-options-admin', // page
		);

        //MARK: Settings fields
        //Basic settings
		add_settings_field(
			'organizer_name', // id
			'Event Organizer Name', // title
			array( $this, 'organizer_name_callback' ), // callback
			'afbp-event-schema-options-admin', // page
			'afbp_event_organizer_info' // section
		);

		add_settings_field(
			'organizer_url', // id
			'Organizer URL', // title
			array( $this, 'organizer_url_callback' ), // callback
			'afbp-event-schema-options-admin', // page
			'afbp_event_organizer_info' // section
		);
	}

	public function event_schema_options_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['organizer_name'] ) ) {
			$sanitary_values['organizer_name'] = $input['organizer_name'];
		}

		if ( isset( $input['organizer_url'] ) ) {
			$sanitary_values['organizer_url'] = $input['organizer_url'];
		}
		return $sanitary_values;
	}

	public function event_schema_options_section_info() {}

	public function event_schema_options_section_organizer() {
		?>
		<p>Set who is listed as the Organizer for events.</p>
		<?php
		if(!$this->is_em_installed){
			?>
			<p class="warn">Uh-oh! This only works with the <a href="https://wp-events-plugin.com/" target="_blank">Events Manager plugin</a>. It doesn't look like you have that installed and activated.</p>
			<?php
		}
	}

	

	public function text_field_option($optionId){
        $value = isset( $this->afbp_event_schema_options[$optionId] ) ? esc_attr( $this->afbp_event_schema_options[$optionId]) : '';
        ?>
            <input class="regular-text" type="text" name="afbp_event_schema_option_name[<?php echo $optionId ?>]" id="<?php echo $optionId ?>" value="<?php echo $value ?>" <?php echo $this->is_em_installed?"":"disabled" ?>>
        <?php

    }

	public function organizer_name_callback() {
		$this->text_field_option('organizer_name');
	}

	public function organizer_url_callback() {
        $this->text_field_option('organizer_url');
	}
}
// if ( is_admin() )
// 	$event_schema_options = new AFBP_GoogleAdsConversions();

/* 
 * Retrieve this value with:
 * $event_schema_options = get_option( 'afbp_event_schema_option_name' ); // Array of All Options
 * $organizer_name = $event_schema_options['organizer_name']; // Record Google Ads Conversions?
 */
